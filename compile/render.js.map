{
"version":3,
"file":"compile/render.js",
"lineCount":169,
"mappings":"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",
"sources":["src/util.js","src/lib/index.js","src/index.js","src/depack.js"],
"sourcesContent":["// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n\nexport let encodeEntities = s => `${s}`\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;')\n\nexport let indent = (s, char) => `${s}`.replace(/(\\n+)/g, '$1' + (char || '\\t'))\n\nexport let isLargeString = (s, length = 40, ignoreLines = false) => (`${s}`.length>length || (!ignoreLines && `${s}`.indexOf('\\n')!=-1) || `${s}`.indexOf('<')!==-1)\n\nconst JS_TO_CSS = {}\n\n/**\n * Convert an Object style to a CSSText string.\n * @param {!Object} s\n */\nexport function styleObjToCss(s) {\n  let str = ''\n  for (let prop in s) {\n    let val = s[prop]\n    if (val!=null) {\n      if (str) str += ' '\n      // str += jsToCss(prop);\n      str += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g,'-$1').toLowerCase())\n      str += ': '\n      str += val\n      if (typeof val=='number' && IS_NON_DIMENSIONAL.test(prop)===false) {\n        str += 'px'\n      }\n      str += ';'\n    }\n  }\n  return str || undefined\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {!preact.VNode} vnode The VNode to get props for\n */\nexport function getNodeProps(vnode) {\n  const props = {\n    ...vnode.attributes, children: vnode.children,\n  }\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps!==undefined) {\n    for (let i in defaultProps) {\n      if (props[i]===undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */","import { encodeEntities, styleObjToCss } from '../util'\n\n/**\n * Maps attributes to `name=\"value\"` strings, and returns html if dangerouslySetInnerHTML is given.\n * @param {!Object<string, ?>} attributes\n * @param {string} nodeName\n * @param {Object} [props]\n * @param {boolean} [props.allAttributes=false]\n * @param {boolean} [props.xml=false]\n * @param {boolean} [props.isSvgMode=false]\n * @param {boolean} [props.sort=false]\n */\nexport const mapAttributes = (attributes, nodeName, {\n  allAttributes, xml, isSvgMode, sort, selectValue,\n} = {}) => {\n  let html\n  const attrs = Object.keys(attributes)\n  if (sort) attrs.sort()\n  const a = attrs.map((name) => {\n    let v = attributes[name]\n    if (name == 'children') return\n    if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) return\n    if (!allAttributes && ['key', 'ref'].includes(name)) return\n    if (name == 'className') {\n      if (attributes.class) return // class takes precedence\n      name = 'class'\n    } else if (name == 'htmlFor') {\n      if (attributes.for) return // class takes precedence\n      name = 'for'\n    } else if (name == 'srcSet') {\n      if (attributes.srcset) return // srcset takes precedence\n      name = 'srcset'\n    }\n    if (isSvgMode && name.match(/^xlink:?./)) {\n      name = name.toLowerCase().replace(/^xlink:?/, 'xlink:')\n    }\n    if (name == 'style' && v && typeof v == 'object') {\n      v = styleObjToCss(v)\n    }\n    if (name == 'dangerouslySetInnerHTML') {\n      html = v && v.__html // side-effect\n    } else if ((v || v===0 || v==='') && typeof v!='function') {\n      if (v===true || v==='') {\n        v = name\n        // in non-xml mode, allow boolean attributes\n        if (!xml) return name\n      }\n      let s = ''\n      if (name == 'value') {\n        if (nodeName == 'select') {\n          selectValue = v\n          return\n        } else if (nodeName == 'option' && selectValue == v) {\n          s = 'selected '\n        }\n      }\n      return `${s}${name}=\"${encodeEntities(v)}\"`\n    }\n  }).filter(Boolean)\n  return { mappedAttributes: a, html, selectValue }\n}\n\nexport const inlineElements = [\n  'a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br',\n  'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del',\n  'dfn', 'em', 'embed', 'i', 'iframe', 'img', 'input', 'ins',\n  'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object',\n  'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp',\n  'slot', 'small', 'span', 'strong', 'sub',\n  'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var',\n  'video', 'wbr',\n]","import { encodeEntities, indent, isLargeString, getNodeProps } from './util'\nimport { mapAttributes, inlineElements } from './lib'\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = []\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/\nconst INLINE_ELEMENTS = new RegExp(`^(${inlineElements.join('|')})$`)\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n * This method is just a convenience alias for `render(vnode, context, { shallow:true })`\n * @param {preact.VNode} vnode JSX VNode to render.\n * @param {!Object} [context]  Optionally pass an initial context object through the render path.\n */\nconst shallowRender = (vnode, context) => renderToString(vnode, { shallow: true }, context)\n\n// const prettyAttributeHook = (name, value, context, opts) => {\n//   let indentChar = typeof opts.pretty=='string' ? opts.pretty : '  '\n//   return `\\n${indentChar}${name}=\"${encodeEntities(value)}\"`\n// }\n\n/**\n * Render Preact JSX Components to an HTML string.\n * @param {preact.VNode} vnode JSX VNode to render.\n * @param {!_depack.RenderConfig} [config] Rendering options.\n */\nconst render = (vnode, config = {}, context = {}) => {\n  const { addDoctype, pretty } = config\n  const res = renderToString(vnode, config, context)\n  if (addDoctype) return `<!doctype html>${pretty ? '\\n': ''}${res}`\n  return res\n}\n\n/** Render Preact JSX + Components to an HTML string.\n * @param {preact.VNode|boolean|number|string|undefined} vnode\n * @param {!_depack.RenderConfig} [opts]\n * @param {!Object} [context]\n * @param {boolean} [inner]\n * @param {boolean} [isSvgMode]\n * @param {string} [selectValue] Used to set the value of options via select's value `attribute`.\n */\nfunction renderToString(\n  vnode, opts = {}, context = {}, inner = false, isSvgMode = false, selectValue,\n) {\n  if (vnode==null || typeof vnode=='boolean') {\n    return ''\n  }\n\n  const {\n    pretty = false,\n    shallow = false,\n    renderRootComponent = false,\n    shallowHighOrder = false,\n    sortAttributes,\n    allAttributes,\n    xml,\n    initialPadding = 0,\n    closeVoidTags = false,\n  } = opts\n\n  let { lineLength = 40 } = opts\n  lineLength -= initialPadding\n\n  let { nodeName, attributes = {} } = vnode\n\n  const noPretty = ['textarea', 'pre'].includes(nodeName)\n  const ip = ' '.repeat(initialPadding)\n\n  const indentChar = typeof pretty == 'string' ? pretty :\n    `  ${ip}`\n\n  // #text nodes\n  if (typeof vnode!='object' && !nodeName) {\n    return encodeEntities(vnode)\n  }\n\n  // components\n  if (typeof nodeName=='function') {\n    // nodeName = /** @type {!Function} */ (nodeName)\n    if (shallow && (inner || !renderRootComponent)) {\n      nodeName = getComponentName(nodeName)\n    }\n    else {\n      let props = getNodeProps(/** @type {!preact.VNode} */ (vnode)),\n        rendered\n\n      if (!nodeName.prototype || typeof nodeName.prototype.render!='function') {\n        // stateless functional components\n        rendered = nodeName(props, context)\n      }\n      else {\n        // class-based components\n        let c = /** @type {!preact.Component} */ (new nodeName(props, context))\n        // turn off stateful re-rendering:\n        c._disable = c.__x = true\n        c.props = props\n        c.context = context\n        if (nodeName.getDerivedStateFromProps) c.state = {\n          ...c.state,\n          ...nodeName.getDerivedStateFromProps(c.props, c.state),\n        }\n        else if (c.componentWillMount) c.componentWillMount()\n        rendered = c.render(c.props, c.state, c.context)\n\n        if (c.getChildContext) {\n          context = { ...context, ...c.getChildContext() }\n        }\n      }\n\n      return renderToString(rendered, opts, context, shallowHighOrder, isSvgMode, selectValue)\n    }\n  }\n\n  // render JSX to HTML\n  let s = '', html\n\n  let mappedAttributes\n  ;({ mappedAttributes, html, selectValue } = mapAttributes(/** @type {!Object} */ (attributes), nodeName, {\n    allAttributes, xml, isSvgMode, sort: sortAttributes, selectValue,\n  }))\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    const nl = `<${nodeName}`\n    let cl = nl.length\n    s = mappedAttributes.reduce((acc, current) => {\n      const newLength = cl + 1 + current.length\n      if (newLength > lineLength) {\n        cl = indentChar.length\n        return `${acc}\\n${indentChar}${current}`\n      }\n      cl = newLength\n      return `${acc} ${current}`\n    }, '')\n  } else {\n    s = mappedAttributes.length ? ' ' + mappedAttributes.join(' ') : ''\n  }\n\n  s = `<${nodeName}${s}>`\n  if (`${nodeName}`.match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s\n\n  let isVoid = `${nodeName}`.match(VOID_ELEMENTS)\n  if (closeVoidTags) {\n    if (isVoid) s = s.replace(/>$/, ' />')\n  }\n\n  let pieces = []\n  if (html) {\n    // if multiline, indent.\n    if (pretty && (isLargeString(html) || html.length + getLastLineLength(s) > lineLength)) {\n      html = '\\n' + indentChar + indent(html, indentChar)\n    }\n    s += html\n  }\n  else if (vnode.children) {\n    let hasLarge = pretty && s.includes('\\n')\n    pieces = vnode.children.map((child) => {\n      if (child==null || child===false) return\n      const childSvgMode = nodeName == 'svg' ? true : nodeName == 'foreignObject' ? false : isSvgMode\n      const ret = renderToString(child, opts, context, true, childSvgMode, selectValue)\n      if (!ret) return\n      if (pretty && ret.length + getLastLineLength(s) > lineLength)\n        hasLarge = true\n      return ret\n    }).filter(Boolean)\n\n    if (pretty && hasLarge && !noPretty) {\n      for (let i=pieces.length; i--;) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar)\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('')\n  }\n  else if (xml) {\n    return s.substring(0, s.length-1) + ' />'\n  }\n\n  if (!isVoid) {\n    // inline elements should not have additional whitespace\n    // however if there were other tags inside them, that should be fine\n    const lastPiece = pieces[pieces.length - 1]\n    const isInline = `${nodeName}`.match(INLINE_ELEMENTS) && (lastPiece ? !/>$/.test(lastPiece) : true)\n    if (!isInline && !noPretty && pretty && s.includes('\\n')) s += `\\n${ip}`\n    s += `</${nodeName}>`\n  }\n\n  return s\n}\n\n/**\n * @param {!Function} component\n */\nfunction getComponentName(component) {\n  return component.displayName || component!==Function && component.name || getFallbackComponentName(component)\n}\n\n/**\n * @param {!Function} component\n */\nfunction getFallbackComponentName(component) {\n  /** @type {string} */\n  const str = Function.prototype.toString.call(component)\n\n  let name = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1]\n  if (!name) {\n    // search for an existing indexed name for the given component:\n    let index = -1\n    for (let i=UNNAMED.length; i--; ) {\n      if (UNNAMED[i]===component) {\n        index = i\n        break\n      }\n    }\n    // not found, create a new indexed name:\n    if (index<0) {\n      index = UNNAMED.push(component) - 1\n    }\n    name = `UnnamedComponent${index}`\n  }\n  return name\n}\n\nexport default render\n\nexport { shallowRender }\n\nconst getLastLineLength = (s) => {\n  const st = s.split('\\n')\n  const lastLine = st[st.length - 1]\n  return lastLine.length\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').RenderConfig} _depack.RenderConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Component} preact.Component\n */","import '../types/externs'\nimport '@externs/preact/types/externs'\n\nimport render from './'\n\nmodule.exports = render"],
"names":["IS_NON_DIMENSIONAL","encodeEntities","s","replace","isLargeString","length","indexOf","JS_TO_CSS","getNodeProps","vnode","props","attributes","children","defaultProps","nodeName","undefined","i","mapAttributes","allAttributes","xml","isSvgMode","sort","selectValue","html","attrs","Object","keys","mappedAttributes","map","name","v","match","includes","class","for","srcset","toLowerCase","str","prop","val","test","__html","filter","a","Boolean","UNNAMED","VOID_ELEMENTS","INLINE_ELEMENTS","renderToString","opts","context","inner","pretty","shallow","renderRootComponent","shallowHighOrder","sortAttributes","initialPadding","closeVoidTags","lineLength","noPretty","ip","repeat","indentChar","prototype","render","c","_disable","__x","getDerivedStateFromProps","state","componentWillMount","rendered","getChildContext","displayName","Function","getFallbackComponentName","cl","nl","reduce","acc","current","newLength","join","isVoid","pieces","getLastLineLength","hasLarge","child","ret","childSvgMode","substring","lastPiece","component","toString","call","index","push","st","split","lastLine","module","exports","config","addDoctype","res"]
}
